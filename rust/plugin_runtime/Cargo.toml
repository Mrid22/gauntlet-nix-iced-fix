[package]
name = "gauntlet-plugin-runtime"
version = "0.1.0"
edition.workspace = true

[dependencies]
# workspaces
gauntlet-common = { path = "../common" }
gauntlet-component-model = { path = "../component_model" }
gauntlet-utils = { path = "../utils" }
gauntlet-common-plugin-runtime = { path = "../common_plugin_runtime" }

# shared
anyhow.workspace = true
tracing.workspace = true
tokio.workspace = true
tokio-util.workspace = true
serde.workspace = true
bincode.workspace = true
indexmap.workspace = true
regex.workspace = true
futures.workspace = true
image.workspace = true
once_cell.workspace = true
bytes.workspace = true
walkdir.workspace = true
typed-path.workspace = true
interprocess.workspace = true

# other
deno_core = { version = "0.321.0" } # deno 2.1.1
deno_runtime = { version = "0.188.0" }
resvg = { version = "0.44.0", default-features = false}
numbat = "1.14.0"
which = "7.0.1"
uuid = "1.11.0"
open = "5"
sys-locale = "0.3.2"

[target.'cfg(target_os = "linux")'.dependencies]
freedesktop_entry_parser = "1.3"
freedesktop-icons = "0.2"
wayland-protocols-wlr = { version = "0.3.5", features = ["client"] }
cosmic-protocols = { git = "https://github.com/pop-os/cosmic-protocols.git" }
wayland-client = "0.31.7"
smithay-client-toolkit = "0.19.2"
x11rb = { version = "0.13", features = ["extra-traits"] }
encoding = "0.2"

[target.'cfg(target_os = "macos")'.dependencies]
cacao = "0.3.2"
plist = "1.7.0"
icns = "0.3.1"
objc2-app-kit = { version = "0.2.2", features = ["NSWorkspace", "NSImage", "NSImageRep", "NSBitmapImageRep", "NSGraphics", "NSGraphicsContext"] }
objc2-foundation = { version = "0.2.2", features = ["NSString"] }
objc2 = "0.5.2"

[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.58.0", features = ["Win32_Storage_FileSystem", "Win32_UI_WindowsAndMessaging", "Win32_UI_Shell", "Win32_UI_Controls"] }

[target.'cfg(any(target_os = "linux", target_os = "macos"))'.dependencies]
libc = "0.2"

[features]
scenario_runner = []
release = []

