[package]
name = "gauntlet"
edition.workspace = true
repository = "https://github.com/project-gauntlet/gauntlet"

[workspace]
members = [
    "rust/management_client",
    "rust/client",
    "rust/server",
    "rust/common",
    "rust/common_ui",
    "rust/common_plugin_runtime",
    "rust/utils",
    "rust/utils_macros",
    "rust/cli",
    "rust/component_model",
    "rust/scenario_runner",
    "rust/manifest_schema",
    "rust/plugin_runtime",
]

[workspace.package]
edition = "2024"

[workspace.dependencies]
# iced
#iced = { version = "0.13.99", features = ["tokio", "lazy", "advanced", "image", "svg"] }
iced = { git = "https://github.com/project-gauntlet/iced.git", branch = "gauntlet-0.13.1", features = ["tokio", "lazy", "advanced", "image", "svg"] }
#iced_fonts = { version = "0.2.99", features = ["bootstrap"] }
iced_fonts =  { git = "https://github.com/project-gauntlet/iced_fonts.git", branch = "gauntlet-0.13.1", features = ["bootstrap"] }
#iced_layershell = "0.13.99"
iced_layershell =  { git = "https://github.com/project-gauntlet/exwlshelleventloop.git", branch = "gauntlet-0.13.1" }

# workspaces
gauntlet-common = { path = "./rust/common" }
gauntlet-common-ui = { path = "./rust/common_ui" }
gauntlet-common-plugin-runtime = { path = "./rust/common_plugin_runtime" }
gauntlet-plugin-runtime = { path = "./rust/plugin_runtime" }
gauntlet-management-client = { path = "./rust/management_client" }
gauntlet-client = { path = "./rust/client" }
gauntlet-server = { path = "./rust/server" }
gauntlet-utils = { path = "./rust/utils" }
gauntlet-utils-macros = { path = "./rust/utils_macros" }
gauntlet-component-model = { path = "./rust/component_model" }
gauntlet-scenario-runner = { path = "./rust/scenario_runner" }

# shared
anyhow = { version = "1", features = ["backtrace"] }
tracing = { version = "0.1" }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tokio = { version = "1.42" }
tokio-util = "0.7"
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0" }
bincode = { version = "2.0.0-rc.3" }
thiserror = { version = "2" }
indexmap = { version = "2.1", features = ["serde"] }
itertools = { version = "0.13" }
regex = { version = "1.9.3" }
futures = { version = "0.3.31" }
image = { version = "0.25" }
once_cell = { version = "1.19" }
tonic = { version = "0.12.3" }
tonic-build = { version = "0.12.3" }
prost = { version = "0.13.4" }
bytes = { version = "1.6.0" }
walkdir = { version = "2.4.0" }
typed-path = { version = "0.10.0" }
interprocess = { version = "2.2.2", features = ["tokio"] }
toml = "0.8"

[dependencies]
gauntlet-cli = { path = "rust/cli" }

[features]
release = ["gauntlet-cli/release"]
scenario_runner = ["gauntlet-cli/scenario_runner"]

[profile.release-size]
inherits = "release"
opt-level = "s"
lto = "thin"
strip = true

#[patch.crates-io]
#iced_fonts = { path = "../../../RustroverProjects/iced_fonts_fork" }
#iced = { path = "../../../RustroverProjects/iced-fork" }
#iced_debug = { path = "../../../RustroverProjects/iced-fork/debug" }
#iced_devtools = { path = "../../../RustroverProjects/iced-fork/devtools" }
#iced_program = { path = "../../../RustroverProjects/iced-fork/program" }
#iced_core = { path = "../../../RustroverProjects/iced-fork/core" }
#iced_futures = { path = "../../../RustroverProjects/iced-fork/futures" }
#iced_graphics = { path = "../../../RustroverProjects/iced-fork/graphics" }
#iced_renderer = { path = "../../../RustroverProjects/iced-fork/renderer" }
#iced_runtime = { path = "../../../RustroverProjects/iced-fork/runtime" }
#iced_tiny_skia = { path = "../../../RustroverProjects/iced-fork/tiny_skia" }
#iced_wgpu = { path = "../../../RustroverProjects/iced-fork/wgpu" }
#iced_widget = { path = "../../../RustroverProjects/iced-fork/widget" }
#iced_winit = { path = "../../../RustroverProjects/iced-fork/winit" }
#iced_layershell = { path = "../../../RustroverProjects/exwlshelleventloop/iced_layershell" }
